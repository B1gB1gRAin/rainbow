<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
   
	<!--
		 设置页面不登陆也可以访问  
		security="none"  设置此资源不被拦截. 
	-->
	<http pattern="/*.html" security="none"></http>
	<http pattern="/css/**" security="none"></http>
	<http pattern="/img/**" security="none"></http>
	<http pattern="/js/**" security="none"></http>
	<http pattern="/plugins/**" security="none"></http>

	<!-- 页面的拦截规则    use-expressions:是否启动SPEL表达式 默认是true -->
	<http use-expressions="false">
		<!-- 当前用户必须有ROLE_USER的角色 才可以访问根目录及所属子目录的资源 -->
		<!-- 
			intercept-url 表示拦截页面   
			/*  表示的是该目录下的资源，只包括本级目录不包括下级目录
			/** 表示的是该目录以及该目录下所有级别子目录的资源
		-->
		<intercept-url pattern="/**" access="ROLE_ADMIN"/>
		<!-- 开启表单登陆功能 -->
		<!-- 
			1.login-page：指定登录页面。
			2.authentication-failure-url：指定了身份验证失败时跳转到的页面。
			3.default-target-url：指定了成功进行身份验证和授权后默认呈现给用户的页面。
			4.csrf disabled="true"  关闭csrf ,如果不加会出现错误 .
				CSRF（Cross-site request forgery）跨站请求伪造，也被称为“One Click Attack”或者Session Riding，通常缩写为CSRF或者XSRF，是一种对网站的恶意利用。
			5.always-use-default-target：指定了是否在身份验证通过后总是跳转到default-target-url属性指定的URL。
			6.username-parameter、password-parameter指定登录页用户名密码参数 默认是username password
			7.login-processing-url 设置登录页请求的地址 默认是/login
		-->
		<form-login	password-parameter="password" username-parameter="username" login-processing-url="/login"
					login-page="/login.html" default-target-url="/admin/index.html" 
					authentication-failure-url="/login.html" always-use-default-target="true"/>
		<csrf disabled="true"/>
		
		<!-- 如果你在系统中使用了框架页(如iframe)，需要设置框架页的策略为SAMEORIGIN -->
		<headers>
			<frame-options policy="SAMEORIGIN"/>
		</headers>
		
		<!-- 
			logout-url:退出的地址，会自动生成
			logout-success-url:退出后跳转的地址
		 -->
		<logout logout-url="/logout" logout-success-url="/login.html"/>
	</http>
	
	<!-- 认证管理器 -->
	<authentication-manager>
		<authentication-provider>
			<user-service>
				<user name="admin" password="123456" authorities="ROLE_ADMIN"/>
				<user name="bigbigrain" password="123456" authorities="ROLE_ADMIN"/>
			</user-service>
		</authentication-provider>	
	</authentication-manager>
		
</beans:beans>